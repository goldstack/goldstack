{
  "html": "<p></p><div class=\"markdown-fragment\"><p>This module provides a <a href=\"https://nextjs.org/\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">Next.js</a> application set up to use Bootstrap styling that is deployed to AWS using the <a href=\"https://aws.amazon.com/cloudfront/\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">CloudFront CDN</a> and <a href=\"https://aws.amazon.com/lambda/edge/\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">Lambda@Edge</a>.</p></div><p></p>\n<h2 class=\"heading\"><span id=\"features\"></span><a href=\"#features\">Features</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h2>\n<ul>\n<li>Bootstrap styling for Next.js application</li>\n</ul>\n<p></p><div class=\"markdown-fragment\"><ul>\n<li>Optimised for TypeScript</li>\n<li>Configured for unit testing using Jest and React Testing library</li>\n<li>Scalable AWS infrastructure defined in Terraform; all content served through the powerful CloudFront CDN and stored in S3 at very low costs. This <a href=\"https://simonecarletti.com/blog/2016/08/redirect-domain-https-amazon-cloudfront/\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">blog article</a> shows how a similar setup could be created manually.</li>\n<li>Full support for SSL - using free certificates issued by AWS.</li>\n<li>CDN caching optimised for Next.js (e.g. all files in <code class=\"inline\">_next/static</code> are automatically cached on the CDN and the client)</li>\n<li>Configurable with your own domain name</li>\n<li>Rolling out of infrastructure and deployment supported through easy to use scripts</li>\n</ul></div><p></p>\n<h2 class=\"heading\"><span id=\"configure\"></span><a href=\"#configure\">Configure</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h2>\n<p></p><div class=\"markdown-fragment\"><p></p><div class=\"markdown-fragment\"><p></p><div class=\"markdown-fragment\"><p>The following key properties need to be configured for this module:</p>\n<ul>\n<li><strong>Hosted Zone Domain</strong>: A Route 53 hosted zone to which the <em>Primary Website Domain</em> and <em>Redirect Website Domain</em> can be added as records. For instance, the hosted zone domain <code class=\"inline\">mysite.com</code> would allow adding the primary domain <code class=\"inline\">mysite.com</code> and the redirect domain <code class=\"inline\">www.mysite.com</code>. For more details, please check <a href=\"https://docs.goldstack.party/docs/goldstack/configuration#hosted-zone-configuration\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">Hosted Zone Configuration</a> in the Goldstack documentation.</li>\n<li><strong>Primary Website Domain</strong>: This is the domain your users will use to view the site. For instance, if you configure the domain <code class=\"inline\">mysite.com</code>, users will be able to view your site by opening the URL <code class=\"inline\">https://mysite.com</code>.</li>\n<li><strong>Redirect Website Domain</strong>: This is a domain that will redirect all requests to your <em>Primary Website Domain</em>. The redirect website domain <em>must be</em> different to the <em>Primary Website Domain</em>. For instance, if you configure the domain <code class=\"inline\">mysite.com</code> as your primary domain, you can configure <code class=\"inline\">www.mysite.com</code> as your redirect domain. Users will be redirected to <code class=\"inline\">https://mysite.com</code> when they attempt to open the URL <code class=\"inline\">https://www.mysite.com</code>. Note that the <em>Redirect Website Domain</em> must be configured, even if you do not need this functionality.</li>\n<li><strong>Default Cache Duration</strong>: The number of seconds that files will be cached in the AWS content delivery network. Setting this to <code class=\"inline\">120</code> for instance, would mean that, unless otherwise specified, webpages and other resources will be cached for 120 s. In that case, when a new version of a page is deployed, it can take up to 120 s for changes to appear when accessing the deployed version of the application.</li>\n</ul></div><p></p>\n<ul>\n<li><strong>Environment Variables</strong>: Configures environment variables for the application. Environment variables without the prefix <code class=\"inline\">NEXT_PUBLIC_</code> will only be available during build time of the application. For more information see <a href=\"https://nextjs.org/docs/basic-features/environment-variables\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">Environment Variables</a> in the Next.js documentation.</li>\n</ul></div><p></p></div><p></p>\n<h2 class=\"heading\"><span id=\"getting-started\"></span><a href=\"#getting-started\">Getting Started</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h2>\n<p></p><div class=\"markdown-fragment\"><p></p><div class=\"markdown-fragment\"><h3 class=\"heading\"><span id=\"infrastructure-2\"></span><a href=\"#infrastructure-2\"><span id=\"infrastructure-1\"></span><a href=\"#infrastructure-1\" class=\"relative\"><span id=\"infrastructure\"></span></a><a href=\"#infrastructure\" class=\"relative\">Infrastructure</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h3>\n<p>The first thing we recommend to do with a new module is to stand up the infrastructure for the module. For this, find the directory for this module in the <code class=\"inline\">packages/</code> folder and navigate to this folder in the command line. Then identify the name of the deployment you have defined in the Goldstack configuration tool. This can be found in the <code class=\"inline\">packages/[moduleName]/goldstack.json</code> file. Look for the <code class=\"inline\">\"deployments\"</code> property and there for the <code class=\"inline\">\"name\"</code> of the first deployment. The name should either be <code class=\"inline\">dev</code> or <code class=\"inline\">prod</code>.</p>\n<p>In order to stand up the infrastructure, run the following command:</p>\n<pre class=\"language-bash language-bash language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> infra up <span class=\"token punctuation\">[</span>deploymentName<span class=\"token punctuation\">]</span>\n</code></pre>\n<p>This will be either <code class=\"inline\">yarn infra up dev</code> or <code class=\"inline\">yarn infra up prod</code> depending on your choice of deployment. Note that running this command can take a while.</p></div><p></p>\n<p></p><div class=\"markdown-fragment\"><h3 class=\"heading\"><span id=\"deployment-2\"></span><a href=\"#deployment-2\"><span id=\"deployment-1\"></span><a href=\"#deployment-1\" class=\"relative\"><span id=\"deployment\"></span></a><a href=\"#deployment\" class=\"relative\">Deployment</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h3>\n<p>Once the infrastructure is successfully set up in AWS using <code class=\"inline\">yarn infra up</code>, we can deploy the module. For this, simply run the following command:</p>\n<pre class=\"language-bash language-bash language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> deploy <span class=\"token punctuation\">[</span>deploymentName<span class=\"token punctuation\">]</span>\n</code></pre>\n<p>This will either be <code class=\"inline\">yarn deploy dev</code> or <code class=\"inline\">yarn deploy prod</code> depending on your choice of deployment during project configuration.</p></div><p></p>\n<p></p><div class=\"markdown-fragment\"><h3 class=\"heading\"><span id=\"development-2\"></span><a href=\"#development-2\"><span id=\"development-1\"></span><a href=\"#development-1\" class=\"relative\"><span id=\"development\"></span></a><a href=\"#development\" class=\"relative\">Development</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h3>\n<p>Goldstack's Next.js module is a simple wrapper around a standard Next.js project. Please see the <a href=\"https://nextjs.org/docs/basic-features/pages\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">Next.js documentation</a> for details on how to develop a Next.js application. Generally, the folder <code class=\"inline\">src/pages</code> is a good starting point.</p></div><p></p></div><p></p>\n<h2 class=\"heading\"><span id=\"infrastructure-3\"></span><a href=\"#infrastructure-3\">Infrastructure</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h2>\n<p></p><div class=\"markdown-fragment\"><p>All infrastructure for this module is defined in Terraform. You can find the Terraform files for this module in the directory <code class=\"inline\">[moduleDir]/infra/aws</code>. You can define multiple deployments for this module, for instance for development, staging and production environments.</p>\n<p>If you configured AWS deployment before downloading your project, the deployments and their respective configurations are defined in <code class=\"inline\">[moduleDir]/goldstack.json</code>.</p>\n<p>The configuration tool will define one deployment. This will be either <code class=\"inline\">dev</code> or <code class=\"inline\">prod</code> depending on your choice during project configuration. In the example <code class=\"inline\">goldstack.json</code> below, a deployment with the name <code class=\"inline\">dev</code> is defined.</p>\n<pre class=\"language-json language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"$schema\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./schemas/package.schema.json\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"template\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"templateVersion\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"configuration\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"deployments\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"awsRegion\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"us-west-2\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"awsUser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"awsUser\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"configuration\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        ...\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 class=\"heading\"><span id=\"infrastructure-commands-1\"></span><a href=\"#infrastructure-commands-1\"><span id=\"infrastructure-commands\"></span><a href=\"#infrastructure-commands\" class=\"relative\">Infrastructure Commands</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h3>\n<p>Infrastructure commands for this module can be run using <code class=\"inline\">yarn</code>. There are four commands in total:</p>\n<ul>\n<li><code class=\"inline\">yarn infra up</code>: For standing up infrastructure.</li>\n<li><code class=\"inline\">yarn infra init</code>: For <a href=\"https://www.terraform.io/docs/commands/init.html\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">initialising Terraform</a>.</li>\n<li><code class=\"inline\">yarn infra plan</code>: For running <a href=\"https://www.terraform.io/docs/commands/plan.html\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">Terraform plan</a>.</li>\n<li><code class=\"inline\">yarn infra apply</code>: For running <a href=\"https://www.terraform.io/docs/commands/apply.html\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">Terraform apply</a>.</li>\n<li><code class=\"inline\">yarn infra destroy</code>: For destroying all infrastructure using <a href=\"https://www.terraform.io/docs/commands/destroy.html\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">Terraform destroy</a>.</li>\n</ul>\n<p>For each command, the deployment they should be applied to must be specified.</p>\n<pre class=\"language-bash language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> infra <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>deploymentName<span class=\"token punctuation\">]</span>\n</code></pre>\n<p>For instance, to stand up the infrastructure for the <code class=\"inline\">dev</code> deployment, the following command would need to be issued:</p>\n<pre class=\"language-bash language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> infra up dev\n</code></pre>\n<p>Generally you will only need to run <code class=\"inline\">yarn infra up</code>. However, if you are familiar with Terraform and want more fine-grained control over the deployment of your infrastructure, you can also use the other commands as required.</p>\n<h3 class=\"heading\"><span id=\"customizing-terraform-1\"></span><a href=\"#customizing-terraform-1\"><span id=\"customizing-terraform\"></span><a href=\"#customizing-terraform\" class=\"relative\">Customizing Terraform</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h3>\n<p>Goldstack modules make it very easy to customize infrastructure to your specific needs. The easiest way to do this is to simply edit the <code class=\"inline\">*.tf</code> files in the <code class=\"inline\">infra/aws</code> folder. You can make the changes you need and then run <code class=\"inline\">yarn infra up [deploymentName]</code> to apply the changes.</p>\n<p>The <code class=\"inline\">infra/aws</code> folder contains a file <code class=\"inline\">variables.tf</code> that contains the variables required for your deployment; for instance the domain name for a website. The values for these variables are defined in the module's <code class=\"inline\">goldstack.json</code> file in the <code class=\"inline\">\"configuration\"</code> property. There is one global <code class=\"inline\">configuration</code> property that applies for all deployments and each deployment also has its own <code class=\"inline\">configuration</code> property. In order to add a new variable, add the variable to <code class=\"inline\">variables.tf</code> and then add it to the configuration for your module or to the configurations for the deployments.</p>\n<p>Note that due to JavaScript and Terraform using different conventions for naming variables, Goldstack applies a basic transformation to variable names. Camel-case variables names are converted to valid variables names for Terraform by replacing every instance of a capital letter <code class=\"inline\">C</code> with <code class=\"inline\">_c</code> in the variable name. For instance:</p>\n<p><code class=\"inline\">myVariableName</code> in the Goldstack configuration will translate to the Terraform variable <code class=\"inline\">my_variable_name</code> as defined in <code class=\"inline\">variables.tf</code>.</p>\n<h3 class=\"heading\"><span id=\"terraform-state-1\"></span><a href=\"#terraform-state-1\"><span id=\"terraform-state\"></span><a href=\"#terraform-state\" class=\"relative\">Terraform State</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h3>\n<p>In order to manage your infrastructure, Terraform maintains a state for each deployment; to calculate required changes when the infrastructure is updated and also for destroying the infrastructure if it is no longer required. Goldstack by default will store the terraform state in the <code class=\"inline\">infra/aws</code> folder as simple files.</p>\n<p>This works well for deploying infrastructure from your local development environment but is not a good choice when building a CI/CD pipeline for the infrastructure definition. In that case, it is better to define <a href=\"https://www.terraform.io/docs/state/remote.html\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">Remote State</a>. A popular choice many projects adopt here is to store the <a href=\"https://www.terraform.io/docs/backends/types/s3.html\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">state in an S3 bucket</a>. Please see the Terraform documentation for further details.</p></div><p></p>\n<h2 class=\"heading\"><span id=\"deployment-3\"></span><a href=\"#deployment-3\">Deployment</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h2>\n<p></p><div class=\"markdown-fragment\"><p>This module can be packaged up and deployed to the deployments specified in <code class=\"inline\">goldstack.json</code>. Note that deployment will only work <em>after</em> the infrastructure for the respective deployment has been stood up. To deploy your module, run the following script:</p>\n<pre class=\"language-bash language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> deploy <span class=\"token punctuation\">[</span>deploymentName<span class=\"token punctuation\">]</span>\n</code></pre></div><p></p>\n<p></p><div class=\"markdown-fragment\"><h3 class=\"heading\"><span id=\"vercel-deployment-1\"></span><a href=\"#vercel-deployment-1\"><span id=\"vercel-deployment\"></span><a href=\"#vercel-deployment\" class=\"relative\">Vercel Deployment</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h3>\n<p>The Goldstack Next.js modules can easily be deployed to Vercel.</p>\n<h4 class=\"heading\"><span id=\"1-sign-up-to-vercel-1\"></span><a href=\"#1-sign-up-to-vercel-1\"><span id=\"1-sign-up-to-vercel\"></span><a href=\"#1-sign-up-to-vercel\" class=\"relative\">1. Sign Up to Vercel</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h4>\n<p>You need to create a vercel account if you do not have one already. Use your GitHub account to sign up to Vercel. Your project must be defined in a GitHub repository on this account.</p>\n<p><a href=\"https://vercel.com/signup\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">https://vercel.com/signup</a></p>\n<h4 class=\"heading\"><span id=\"2-configure-project-1\"></span><a href=\"#2-configure-project-1\"><span id=\"2-configure-project\"></span><a href=\"#2-configure-project\" class=\"relative\">2. Configure Project</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h4>\n<p>Click on <a href=\"https://vercel.com/new\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">New Project</a> on the Vercel dashboard to create a new project.</p>\n<p><img src=\"https://cdn.goldstack.party/img/202101/vercel_new_project.png\" alt=\"Vercel New Project\"></p>\n<p>Grant Vercel access to the GitHub repository you want to deploy.</p>\n<p>Then click on <code class=\"inline\">Import</code> to import this repository.</p>\n<p><img src=\"https://cdn.goldstack.party/img/202101/vercel_import.png\" alt=\"Vercel Import Project\"></p>\n<p>Add the project to your personal account. Select the <strong>root directory</strong> of your project as the source code to import (not the directory of the package with the Next.js application).</p>\n<p>Click to extend <em>Build and Output Settings</em> and provide the following build command:</p>\n<pre><code>yarn &#x26;&#x26; yarn build &#x26;&#x26; cd packages/app-nextjs-bootstrap &#x26;&#x26; yarn build:next\n</code></pre>\n<p>Also change the output directory:</p>\n<pre><code>packages/app-nextjs-bootstrap/webDist\n</code></pre>\n<p>Ensure to replace <code class=\"inline\">app-nextjs-bootstrap</code> with the name to the Next.js package you want to deploy in the two values above.</p>\n<p>Provide environment variables if you have defined any.</p>\n<p><img src=\"https://cdn.goldstack.party/img/202101/vercel_build_commands.png\" alt=\"Vercel Build Commands\"></p>\n<p>Click <strong>Deploy</strong> to trigger the deployment. Your application should now be deployed under a <code class=\"inline\">vercel.app</code>domain.</p>\n<p>For more information, see the <a href=\"https://vercel.com/docs\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">Vercel Documentation</a>.</p></div><p></p>\n<h2 class=\"heading\"><span id=\"limitations-for-aws-deployments\"></span><a href=\"#limitations-for-aws-deployments\">Limitations for AWS Deployments</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h2>\n<p></p><div class=\"markdown-fragment\"><p>Goldstack's Next.js modules enable deploying Next.js applications to a serverless AWS infrastructure. The advantage of this is that you get a very low cost, highly scalable and enterprise ready deployment for the Next.js application. However, serverless AWS infrastructure is structurally different to deployments on Vercel or deployments as stand alone Node.js applications. Thus there are a couple of limitations to keep in mind when working with this template:</p>\n<ul>\n<li><a href=\"https://nextjs.org/docs/api-routes/introduction\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">API Routes</a> are not supported. If you need a backend, we recommend adding our <a href=\"lambda-express\" class=\"relative\">Lambda Express</a> template to your project.</li>\n<li>When standing up infrastructure for this module, a new certificate will be automatically obtained from AWS Certificate Manager. AWS has a default limit of the number of SSL certificates per account. If you are reaching this limit, you can simply make a service request with AWS to increase it.</li>\n<li>Pre-fetching does not work in some situations, for instance when statically rendering pages using <code class=\"inline\">getStaticPaths</code>. As a workaround, we recommend not using <a href=\"https://nextjs.org/docs/api-reference/next/link\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">Link</a> components for these routes and instead use vanilla <code class=\"inline\">a</code> elements.</li>\n<li>Files added to the <code class=\"inline\">public/</code> folder may not be served correctly. Configure the CloudFront distribution as described <a href=\"#404-not-found-for-files-in-public-folder-1\" class=\"relative\">here</a> to make the files available.</li>\n<li>Delay in deploying new dynamic routes. Since dynamic routes are implemented using Lambda@Edge functions, it can take a while for dynamic routes to start working. This is because once a new dynamic routes is added, a new Lambda@Edge function needs to be deployed. You can check the state of the CloudFront distribution in the AWS console. If no new dynamic routes have been added, everything should work as expected directly after the deployment.</li>\n<li>Next.js <code class=\"inline\">&#x3C;Image></code> component is not supported, see <a href=\"https://nextjs.org/docs/basic-features/image-optimization#loader\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">Next.js Image loader</a>. Use <code class=\"inline\">img</code> instead. The project is already set up to use <a href=\"https://github.com/cyrilwanner/next-optimized-images\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">next-optimized-images</a> which you can <a href=\"https://github.com/cyrilwanner/next-optimized-images#optimization-packages\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">configure</a> for optimising various image types.</li>\n<li>Redirect domain configured as CNAME rather than its own bucket and CloudFront distribution due to <a href=\"https://www.reddit.com/r/aws/comments/7jyisk/https_redirect_on_s3_bucket_access_denied_error/\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">this know limitation</a></li>\n<li>No support for a dynamic route and pages in the same directory. When creating both normal pages and a dynamic route in a directory, the dynamic route will always be loaded first. For instance, given the following two files:</li>\n</ul>\n<pre><code>[id].tsx\ndummy.tsx\n</code></pre>\n<p>When accessing <code class=\"inline\">/dummy</code>, <code class=\"inline\">[id.tsx]</code> will be loaded. This does not apply to the <code class=\"inline\">index.html</code>, which will still be loaded correctly under the root <code class=\"inline\">/</code>.</p>\n<p>Workaround:</p>\n<p>Place dynamic routes into sub directories, such as:</p>\n<pre><code>[id]/index.tsx\ndummy.tsx\n</code></pre>\n<p>There may be other issues in various edge scenarios. If you come across these, <a href=\"https://github.com/goldstack/goldstack/issues\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">raise an issue</a> or contact support.</p></div><p></p>\n<h2 class=\"heading\"><span id=\"troubleshooting-and-frequently-asked-questions\"></span><a href=\"#troubleshooting-and-frequently-asked-questions\">Troubleshooting and Frequently Asked Questions</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h2>\n<p></p><div class=\"markdown-fragment\"><h3 class=\"heading\"><span id=\"module-parse-failed-unexpected-token-1\"></span><a href=\"#module-parse-failed-unexpected-token-1\"><span id=\"module-parse-failed-unexpected-token\"></span><a href=\"#module-parse-failed-unexpected-token\" class=\"relative\">Module parse failed: Unexpected Token</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h3>\n<p>If you receive an error like the following:</p>\n<pre><code>error - ../goldstack-api/src/module.ts\nModule parse failed: Unexpected token (3:18)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n</code></pre>\n<p>Some additional configuration in <code class=\"inline\">next.config.js</code> is required.</p>\n<p>Due to the way Webpack is configured for Next.js it is necessary to manually define all local dependencies in the Next.js config.</p>\n<p>Simply ensure the name of all local packages you want to use is listed for the <a href=\"https://www.npmjs.com/package/next-transpile-modules\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">next-transpile-modules</a> plugin in the <code class=\"inline\">next.config.js</code>.</p>\n<pre class=\"language-javascript language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> withTM <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'next-transpile-modules'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'@goldstack/utils-track'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'@goldstack/project-template-data'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'@goldstack/goldstack-api'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 class=\"heading\"><span id=\"404-not-found-for-files-in-public-folder-1\"></span><a href=\"#404-not-found-for-files-in-public-folder-1\"><span id=\"404-not-found-for-files-in-public-folder\"></span><a href=\"#404-not-found-for-files-in-public-folder\" class=\"relative\">404 Not found for files in public folder</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h3>\n<p>Next.js supports static file serving by <a href=\"https://nextjs.org/docs/basic-features/static-file-serving\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">placing files into a public/ folder</a>. This is useful for files such as <code class=\"inline\">favicon.ico</code>. This module by default provides support for <code class=\"inline\">favicon.ico</code> files but if you want to add other files, these may not be captured by the <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#cache-behavior-arguments\" class=\"absolute\" target=\"_blank\" rel=\"noopener noreferrer\">CloudFront behaviours configured in Terraform</a>.</p>\n<p>Next.js may try to resolve these files as dynamic paths, which may result in the files not being found. To fix this, go into <code class=\"inline\">infra/aws/root.tf</code> and add additional <code class=\"inline\">ordered_cache_behaviours</code> as required.</p>\n<p>For instance, if you want to serve a file <code class=\"inline\">/myfile.png</code> provided in <code class=\"inline\">public/myfile.png</code> and this file should be cached in CloudFront, add the following behaviour:</p>\n<pre class=\"language-hcl language-hcl\"><code class=\"language-hcl\">  <span class=\"token keyword\">ordered_cache_behavior</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">path_pattern</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"myfile.png\"</span>\n    <span class=\"token property\">allowed_methods</span>  <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span>, <span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">cached_methods</span>   <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span>, <span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">target_origin_id</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"origin-bucket-<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_s<span class=\"token number\">3</span>_bucket<span class=\"token punctuation\">.</span>website_root<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span>\n\n    <span class=\"token keyword\">forwarded_values</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">query_string</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n      <span class=\"token property\">headers</span>      <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Origin\"</span><span class=\"token punctuation\">]</span>\n\n      <span class=\"token keyword\">cookies</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">forward</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"none\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token property\">min_ttl</span>                <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token property\">default_ttl</span>            <span class=\"token punctuation\">=</span> <span class=\"token number\">86400</span>\n    <span class=\"token property\">max_ttl</span>                <span class=\"token punctuation\">=</span> <span class=\"token number\">31536000</span>\n    <span class=\"token property\">compress</span>               <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token property\">viewer_protocol_policy</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"redirect-to-https\"</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>If you would like all files in <code class=\"inline\">/myfolder</code> provided in the folder <code class=\"inline\">public/myfolder</code> and not cache these, provide the following behaviour:</p>\n<pre class=\"language-hcl language-hcl\"><code class=\"language-hcl\">  <span class=\"token keyword\">ordered_cache_behavior</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">path_pattern</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"myfolder/*\"</span>\n    <span class=\"token property\">allowed_methods</span>  <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span>, <span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">]</span>\n    cached_methods   <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span>, <span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">]</span>\n    target_origin_id <span class=\"token punctuation\">=</span> <span class=\"token string\">\"origin-bucket-<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_s<span class=\"token number\">3</span>_bucket<span class=\"token punctuation\">.</span>website_root<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span>\n\n    <span class=\"token keyword\">forwarded_values</span> <span class=\"token punctuation\">{</span>\n      query_string <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n      headers      <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Origin\"</span><span class=\"token punctuation\">]</span>\n\n      cookies <span class=\"token punctuation\">{</span>\n        forward <span class=\"token punctuation\">=</span> <span class=\"token string\">\"none\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    min_ttl                <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span>\n    default_ttl            <span class=\"token punctuation\">=</span> tostring(var.default_cache_duration)\n    max_ttl                <span class=\"token punctuation\">=</span> <span class=\"token number\">1200</span>\n    compress               <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n    viewer_protocol_policy <span class=\"token punctuation\">=</span> <span class=\"token string\">\"redirect-to-https\"</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 class=\"heading\"><span id=\"502-error-the-request-could-not-be-satisfied-when-opening-page-1\"></span><a href=\"#502-error-the-request-could-not-be-satisfied-when-opening-page-1\"><span id=\"502-error-the-request-could-not-be-satisfied-when-opening-page\"></span><a href=\"#502-error-the-request-could-not-be-satisfied-when-opening-page\" class=\"relative\">'502 ERROR The request could not be satisfied' when opening page</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h3>\n<p>Instead of seeing the page, you may see an error message like the following:</p>\n<pre class=\"language-bash language-bash\"><code class=\"language-bash\"><span class=\"token number\">502</span> ERROR\nThe request could not be satisfied.\nThe Lambda <span class=\"token keyword\">function</span> returned invalid json: The json output must be an object type. We can't connect to the server <span class=\"token keyword\">for</span> this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.\nIf you provide content to customers through CloudFront, you can <span class=\"token function\">find</span> steps to troubleshoot and <span class=\"token builtin class-name\">help</span> prevent this error by reviewing the CloudFront documentation.\nGenerated by cloudfront <span class=\"token punctuation\">(</span>CloudFront<span class=\"token punctuation\">)</span>\nRequest ID: JIQQuxOxsXdcyHuUKxbA88YeFs_NH0h7B6xbG-SZFN88byb5WffF0A<span class=\"token operator\">==</span>\n</code></pre>\n<p>This is most likely due to the deployment not having worked correctly. Try deploying the package again with <code class=\"inline\">yarn deploy [deploymentName]</code>.</p>\n<p></p><div class=\"markdown-fragment\"><h3 class=\"heading\"><span id=\"accessdenied-error-when-setting-up-infrastructure-2\"></span><a href=\"#accessdenied-error-when-setting-up-infrastructure-2\"><span id=\"accessdenied-error-when-setting-up-infrastructure-1\"></span><a href=\"#accessdenied-error-when-setting-up-infrastructure-1\" class=\"relative\"><span id=\"accessdenied-error-when-setting-up-infrastructure\"></span></a><a href=\"#accessdenied-error-when-setting-up-infrastructure\" class=\"relative\">AccessDenied error when setting up infrastructure</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h3>\n<p>When running `yarn infra up [deploymentName], you may get AccessDenied errors such as the following:</p>\n<pre class=\"language-bash language-bash language-bash\"><code class=\"language-bash\">Error: error getting S3 Bucket CORS configuration: AccessDenied: Access Denied\n        status code: <span class=\"token number\">403</span>, request id: 1Z1VFR1N5RAMFZ9W, <span class=\"token function\">host</span> id: mYdqmUJ8Vo+t845tuW9NNYF8WVnKxlbynRAir4BoMKHKB5kcFjM3uiGkJpQAHGHxusa6sHzcazs<span class=\"token operator\">=</span>\n</code></pre>\n<p>There are a number of possible causes for this:</p>\n<ul>\n<li>You may have configured your AWS user incorrectly. Please see <a href=\"./../goldstack/configuration#aws-configuration\" class=\"relative\">AWS Configuration</a> for details on how to configure your AWS user.</li>\n<li>You may accidently have a Terraform state in your module. That can happen if you create new modules by copy and pasting from an existing module. In this case, delete the following two folders in your module: <code class=\"inline\">infra/aws/.terraform</code> and <code class=\"inline\">infra/aws/terraform.tfstate.d</code>.</li>\n</ul></div><p></p>\n<h3 class=\"heading\"><span id=\"error-deleting-lambda-function-1\"></span><a href=\"#error-deleting-lambda-function-1\"><span id=\"error-deleting-lambda-function\"></span><a href=\"#error-deleting-lambda-function\" class=\"relative\">Error deleting Lambda Function</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h3>\n<p>Sometimes when running <code class=\"inline\">yarn infra destroy [deploymentName]</code> Terraform reports an error that the edge lambda cannot be deleted.</p>\n<pre><code>Error: Error deleting Lambda Function: InvalidParameterValueException: Lambda was unable to delete arn:aws:lambda:us-east-1:475629728374:function:[function name]-edge:2 because it is a replicated function. Please see our documentation for Deleting Lambda@Edge Functions and Replicas\n</code></pre>\n<p>In that case, simply run <code class=\"inline\">yarn infra destroy [deploymentName]</code> again until it is successful.</p></div><p></p>\n<h2 class=\"heading\"><span id=\"security-hardening\"></span><a href=\"#security-hardening\">Security Hardening</a><span class=\"permalink\"><svg viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n  <g stroke-width=\"1\" fill=\"#000000\" stroke=\"#000000\">\n    <path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M8.995,7.005 L8.995,7.005c1.374,1.374,1.374,3.601,0,4.975l-1.99,1.99c-1.374,1.374-3.601,1.374-4.975,0l0,0c-1.374-1.374-1.374-3.601,0-4.975 l1.748-1.698\"></path>\n    <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M7.005,8.995 L7.005,8.995c-1.374-1.374-1.374-3.601,0-4.975l1.99-1.99c1.374-1.374,3.601-1.374,4.975,0l0,0c1.374,1.374,1.374,3.601,0,4.975 l-1.748,1.698\"></path>\n  </g>\n</svg></span></h2>\n<p></p><div class=\"markdown-fragment\"><p>Here are a number of ways how the configuration for this module can be changed to enhance security:</p>\n<ul>\n<li>In <code class=\"inline\">infra/aws/edge.tf</code> for the <code class=\"inline\">resource \"aws_iam_policy\" \"lambda_logging\"</code> you can further restrict the access rights to write log events: <code class=\"inline\">\"Resource\": \"arn:aws:logs:*:*:*\"</code>.</li>\n</ul></div><p></p>",
  "data": {
    "id": "template-app-nextjs-bootstrap",
    "title": "Next.js Bootstrap"
  }
}
