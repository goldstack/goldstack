{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    },
    {
      "source": "/docs/modules/app-nextjs-bootstrap",
      "destination": "/docs/templates/app-nextjs-bootstrap",
      "statusCode": 308,
      "regex": "^(?!/_next)/docs/modules/app-nextjs-bootstrap(?:/)?$"
    },
    {
      "source": "/docs/modules/lambda-api",
      "destination": "/docs/templates/serverless-api",
      "statusCode": 308,
      "regex": "^(?!/_next)/docs/modules/lambda-api(?:/)?$"
    },
    {
      "source": "/docs/modules/app-nextjs",
      "destination": "/docs/templates/app-nextjs",
      "statusCode": 308,
      "regex": "^(?!/_next)/docs/modules/app-nextjs(?:/)?$"
    },
    {
      "source": "/docs/modules/lambda-express",
      "destination": "/docs/templates/lambda-express",
      "statusCode": 308,
      "regex": "^(?!/_next)/docs/modules/lambda-express(?:/)?$"
    },
    {
      "source": "/docs/modules/email-send",
      "destination": "/docs/templates/email-send",
      "statusCode": 308,
      "regex": "^(?!/_next)/docs/modules/email-send(?:/)?$"
    },
    {
      "source": "/docs/modules/static-website-aws",
      "destination": "/docs/templates/static-website-aws",
      "statusCode": 308,
      "regex": "^(?!/_next)/docs/modules/static-website-aws(?:/)?$"
    },
    {
      "source": "/docs/modules/s3",
      "destination": "/docs/templates/s3",
      "statusCode": 308,
      "regex": "^(?!/_next)/docs/modules/s3(?:/)?$"
    },
    {
      "source": "/docs/modules/lambda-go-gin",
      "destination": "/docs/templates/lambda-go-gin",
      "statusCode": 308,
      "regex": "^(?!/_next)/docs/modules/lambda-go-gin(?:/)?$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/404",
      "regex": "^\\/404$"
    },
    {
      "page": "/docs",
      "regex": "^\\/docs$"
    },
    {
      "page": "/docs/goldstack",
      "regex": "^\\/docs\\/goldstack$"
    },
    {
      "page": "/docs/goldstack/about",
      "regex": "^\\/docs\\/goldstack\\/about$"
    },
    {
      "page": "/docs/goldstack/configuration",
      "regex": "^\\/docs\\/goldstack\\/configuration$"
    },
    {
      "page": "/docs/goldstack/getting-started",
      "regex": "^\\/docs\\/goldstack\\/getting-started$"
    },
    {
      "page": "/docs/goldstack/how-does-it-work",
      "regex": "^\\/docs\\/goldstack\\/how-does-it-work$"
    },
    {
      "page": "/docs/goldstack/security-hardening",
      "regex": "^\\/docs\\/goldstack\\/security-hardening$"
    },
    {
      "page": "/docs/modules/app-nextjs-bootstrap",
      "regex": "^\\/docs\\/modules\\/app-nextjs-bootstrap$"
    },
    {
      "page": "/docs/modules/app-nextjs",
      "regex": "^\\/docs\\/modules\\/app-nextjs$"
    },
    {
      "page": "/docs/modules/email-send",
      "regex": "^\\/docs\\/modules\\/email-send$"
    },
    {
      "page": "/docs/modules/lambda-api",
      "regex": "^\\/docs\\/modules\\/lambda-api$"
    },
    {
      "page": "/docs/modules/lambda-express",
      "regex": "^\\/docs\\/modules\\/lambda-express$"
    },
    {
      "page": "/docs/modules/lambda-go-gin",
      "regex": "^\\/docs\\/modules\\/lambda-go-gin$"
    },
    {
      "page": "/docs/modules/s3",
      "regex": "^\\/docs\\/modules\\/s3$"
    },
    {
      "page": "/docs/modules/static-website-aws",
      "regex": "^\\/docs\\/modules\\/static-website-aws$"
    },
    {
      "page": "/docs/templates",
      "regex": "^\\/docs\\/templates$"
    },
    {
      "page": "/docs/templates/app-nextjs-bootstrap",
      "regex": "^\\/docs\\/templates\\/app-nextjs-bootstrap$"
    },
    {
      "page": "/docs/templates/app-nextjs",
      "regex": "^\\/docs\\/templates\\/app-nextjs$"
    },
    {
      "page": "/docs/templates/dynamodb",
      "regex": "^\\/docs\\/templates\\/dynamodb$"
    },
    {
      "page": "/docs/templates/email-send",
      "regex": "^\\/docs\\/templates\\/email-send$"
    },
    {
      "page": "/docs/templates/hetzner-vps",
      "regex": "^\\/docs\\/templates\\/hetzner-vps$"
    },
    {
      "page": "/docs/templates/lambda-express",
      "regex": "^\\/docs\\/templates\\/lambda-express$"
    },
    {
      "page": "/docs/templates/lambda-go-gin",
      "regex": "^\\/docs\\/templates\\/lambda-go-gin$"
    },
    {
      "page": "/docs/templates/lambda-node-trigger",
      "regex": "^\\/docs\\/templates\\/lambda-node-trigger$"
    },
    {
      "page": "/docs/templates/lambda-python-job",
      "regex": "^\\/docs\\/templates\\/lambda-python-job$"
    },
    {
      "page": "/docs/templates/s3",
      "regex": "^\\/docs\\/templates\\/s3$"
    },
    {
      "page": "/docs/templates/server-side-rendering",
      "regex": "^\\/docs\\/templates\\/server-side-rendering$"
    },
    {
      "page": "/docs/templates/serverless-api",
      "regex": "^\\/docs\\/templates\\/serverless-api$"
    },
    {
      "page": "/docs/templates/static-website-aws",
      "regex": "^\\/docs\\/templates\\/static-website-aws$"
    },
    {
      "page": "/docs/templates/user-management",
      "regex": "^\\/docs\\/templates\\/user-management$"
    },
    {
      "page": "/index",
      "regex": "^\\/index$"
    },
    {
      "page": "/docs/[...slug]",
      "regex": "^/docs/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/docs/(?<nxtPslug>.+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/docs",
      "regex": "^/docs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/docs(?:/)?$"
    }
  ],
  "dataRoutes": [
    {
      "page": "/docs/[...slug]",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "dataRouteRegex": "^/_next/data/b6vJgqIgKVfmaQwtAlmXr/docs/(.+?)\\.json$",
      "namedDataRouteRegex": "^/_next/data/b6vJgqIgKVfmaQwtAlmXr/docs/(?<nxtPslug>.+?)\\.json$"
    }
  ],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Url",
    "prefetchHeader": "Next-Router-Prefetch",
    "contentTypeHeader": "text/x-component"
  },
  "rewrites": []
}