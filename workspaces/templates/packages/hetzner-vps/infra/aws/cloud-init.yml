#cloud-config
users:
  - name: goldstack
    groups: users, admin
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys: []
package_update: true
package_upgrade: true
packages:
  - fail2ban
  - ufw
  - curl
  - jq
  - unzip
  - docker.io
  - docker-compose

write_files:
  - path: /home/goldstack/deploy.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      set -e

      APP_DIR="/home/goldstack/app"
      ZIP_FILE="/home/goldstack/server.zip"
      SECRETS_DIR="$APP_DIR/secrets"
      CREDENTIALS_FILE="/home/goldstack/credentials.json"
      FIRST_DEPLOY_MARKER_FILE="/home/goldstack/.first_deploy"
      ENV_FILE="/home/goldstack/app/.env"

      if [ -f "$ENV_FILE" ]; then
        source $ENV_FILE
      fi

      cd $APP_DIR

      if [ ! -f "$FIRST_DEPLOY_MARKER_FILE" ]; then
        echo "First deploy - run init script"
        sudo "$APP_DIR/init.sh"
        touch "$FIRST_DEPLOY_MARKER_FILE"
        # Step 3: Unzip the uploaded file to the app folder
        echo "Unzipping the file..."
        unzip -o "$ZIP_FILE" -d "$APP_DIR"
      else
        # Step 1: Stop the app by running stop.sh
        if [ -f "$APP_DIR/stop.sh" ]; then
          echo "Stopping the app..."
          chmod +x "$APP_DIR/stop.sh"
          sudo "./stop.sh"
        fi
        # Step 3: Unzip the uploaded file to the app folder
        echo "Unzipping the file..."
        unzip -o "$ZIP_FILE" -d "$APP_DIR"
      fi

      # Step 2: Delete the existing app contents
      echo "Deleting old app contents..."
      rm -rf "$APP_DIR"/*


      # Step 5: Start the app by running start.sh
      if [ -f "$APP_DIR/start.sh" ]; then
        echo "Starting the app..."
        chmod +x "$APP_DIR/start.sh"
        sudo "./start.sh"
      fi

# Ensure the /home/goldstack directory and /home/goldstack/current file exist
runcmd:
  -  #
  -  # Server hardening, see https://community.hetzner.com/tutorials/basic-cloud-config
  -  #
  - printf "[sshd]\nenabled = true\nbanaction = iptables-multiport" > /etc/fail2ban/jail.local
  - systemctl enable fail2ban
  - ufw allow OpenSSH
  - ufw allow http
  - ufw allow https
  - ufw --force enable
  - sed -i -e '/^\(#\|\)PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)PasswordAuthentication/s/^.*$/PasswordAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)KbdInteractiveAuthentication/s/^.*$/KbdInteractiveAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)ChallengeResponseAuthentication/s/^.*$/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)MaxAuthTries/s/^.*$/MaxAuthTries 2/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowTcpForwarding/s/^.*$/AllowTcpForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)X11Forwarding/s/^.*$/X11Forwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowAgentForwarding/s/^.*$/AllowAgentForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AuthorizedKeysFile/s/^.*$/AuthorizedKeysFile .ssh\/authorized_keys/' /etc/ssh/sshd_config
  - sed -i '$a AllowUsers goldstack' /etc/ssh/sshd_config
  - echo 'goldstack ALL=(ALL) NOPASSWD:ALL' | sudo tee /etc/sudoers.d/goldstack
  - sudo chmod 440 /etc/sudoers.d/goldstack
  -  #
  -  # Ensure the newly setup user uses the SSH key passed using server creation
  -  #
  - mkdir -p /home/goldstack
  - mkdir -p /home/goldstack/app
  - cp /root/.ssh/authorized_keys /home/goldstack/.ssh/authorized_keys
  - chown -R goldstack:goldstack /home/goldstack/.ssh
  - chmod 700 /home/goldstack/.ssh
  - chmod 600 /home/goldstack/.ssh/authorized_keys
  - chown -R  goldstack:goldstack /home/goldstack
  - chown goldstack:goldstack /home/goldstack/deploy.sh
  - systemctl start docker # Start Docker
  - systemctl enable docker # Enable Docker to run on boot
  - docker --version # Check Docker installation
  - reboot
