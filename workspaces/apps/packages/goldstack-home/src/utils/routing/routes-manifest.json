{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/404",
      "regex": "^\\/404$"
    },
    {
      "page": "/build_legacy",
      "regex": "^\\/build_legacy$"
    },
    {
      "page": "/build",
      "regex": "^\\/build$"
    },
    {
      "page": "/index",
      "regex": "^\\/index$"
    },
    {
      "page": "/projects/[id]/packages/[packageId]/configure/[step]",
      "regex": "^\\/projects\\/[id]\\/packages\\/[packageId]\\/configure\\/[step]$"
    },
    {
      "page": "/projects/[id]/packages/[packageId]/download",
      "regex": "^\\/projects\\/[id]\\/packages\\/[packageId]\\/download$"
    },
    {
      "page": "/projects/[id]/packages/[packageId]/get-template",
      "regex": "^\\/projects\\/[id]\\/packages\\/[packageId]\\/get-template$"
    },
    {
      "page": "/templates/dynamodb",
      "regex": "^\\/templates\\/dynamodb$"
    },
    {
      "page": "/templates/express-lambda",
      "regex": "^\\/templates\\/express-lambda$"
    },
    {
      "page": "/templates/express-ses",
      "regex": "^\\/templates\\/express-ses$"
    },
    {
      "page": "/templates/go-gin",
      "regex": "^\\/templates\\/go-gin$"
    },
    {
      "page": "/templates/hetzner-vps",
      "regex": "^\\/templates\\/hetzner-vps$"
    },
    {
      "page": "/templates/lambda-api",
      "regex": "^\\/templates\\/lambda-api$"
    },
    {
      "page": "/templates/lambda-node-trigger",
      "regex": "^\\/templates\\/lambda-node-trigger$"
    },
    {
      "page": "/templates/lambda-python-job",
      "regex": "^\\/templates\\/lambda-python-job$"
    },
    {
      "page": "/templates/nextjs-bootstrap",
      "regex": "^\\/templates\\/nextjs-bootstrap$"
    },
    {
      "page": "/templates/nextjs",
      "regex": "^\\/templates\\/nextjs$"
    },
    {
      "page": "/templates/s3",
      "regex": "^\\/templates\\/s3$"
    },
    {
      "page": "/templates/server-side-rendering",
      "regex": "^\\/templates\\/server-side-rendering$"
    },
    {
      "page": "/templates/serverless-api",
      "regex": "^\\/templates\\/serverless-api$"
    },
    {
      "page": "/templates/ses",
      "regex": "^\\/templates\\/ses$"
    },
    {
      "page": "/templates/static-website",
      "regex": "^\\/templates\\/static-website$"
    },
    {
      "page": "/templates/user-management",
      "regex": "^\\/templates\\/user-management$"
    },
    {
      "page": "/terms-and-conditions",
      "regex": "^\\/terms-and-conditions$"
    },
    {
      "page": "/projects/[id]/packages/[packageId]/configure/[step]",
      "regex": "^/projects/([^/]+?)/packages/([^/]+?)/configure/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid",
        "nxtPpackageId": "nxtPpackageId",
        "nxtPstep": "nxtPstep"
      },
      "namedRegex": "^/projects/(?<nxtPid>[^/]+?)/packages/(?<nxtPpackageId>[^/]+?)/configure/(?<nxtPstep>[^/]+?)(?:/)?$"
    },
    {
      "page": "/projects/[id]/packages/[packageId]/download",
      "regex": "^/projects/([^/]+?)/packages/([^/]+?)/download(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid",
        "nxtPpackageId": "nxtPpackageId"
      },
      "namedRegex": "^/projects/(?<nxtPid>[^/]+?)/packages/(?<nxtPpackageId>[^/]+?)/download(?:/)?$"
    },
    {
      "page": "/projects/[id]/packages/[packageId]/get-template",
      "regex": "^/projects/([^/]+?)/packages/([^/]+?)/get\\-template(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid",
        "nxtPpackageId": "nxtPpackageId"
      },
      "namedRegex": "^/projects/(?<nxtPid>[^/]+?)/packages/(?<nxtPpackageId>[^/]+?)/get\\-template(?:/)?$"
    },
    {
      "page": "/templates/[template]",
      "regex": "^/templates/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPtemplate": "nxtPtemplate"
      },
      "namedRegex": "^/templates/(?<nxtPtemplate>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/build",
      "regex": "^/build(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/build(?:/)?$"
    },
    {
      "page": "/build_legacy",
      "regex": "^/build_legacy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/build_legacy(?:/)?$"
    },
    {
      "page": "/terms-and-conditions",
      "regex": "^/terms\\-and\\-conditions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/terms\\-and\\-conditions(?:/)?$"
    }
  ],
  "dataRoutes": [
    {
      "page": "/templates/[template]",
      "routeKeys": {
        "nxtPtemplate": "nxtPtemplate"
      },
      "dataRouteRegex": "^/_next/data/\\-yyMM0juUyZUNkhIl8HYD/templates/([^/]+?)\\.json$",
      "namedDataRouteRegex": "^/_next/data/\\-yyMM0juUyZUNkhIl8HYD/templates/(?<nxtPtemplate>[^/]+?)\\.json$"
    }
  ],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Url",
    "prefetchHeader": "Next-Router-Prefetch",
    "contentTypeHeader": "text/x-component"
  },
  "rewrites": []
}