name: Branch & PR build

on: [push, pull_request]

jobs:
  build:
    name: 'Build'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn@1.22.11

      - name: Install
        run: |
          yarn install

  lint:
    name: 'Lint'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn@1.22.11

      - name: Install
        run: |
          yarn install
      - name: Linting and formatting
        run: |
          yarn format
          yarn format-check
          yarn lint

  audit:
    name: 'NPM Audit'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn@1.22.11

      - name: Install
        run: |
          yarn install
      - name: NPM Audit
        run: |
          yarn npm audit --all --recursive --severity critical

  syncpack:
    name: 'Checking for Package Mismatches'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install Yarn
        run: npm install -g
      - name: Install
        run: |
          yarn install
      - name: Run Syncpack for all workspaces
        run: |
          yarn ensure-no-package-mismatches

  compile:
    name: 'Compile and Type Check'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn@1.22.11

      - name: Install
        run: |
          yarn install
      - name: Compile all
        run: |
          yarn compile

  test-utilities:
    name: 'Utilities Test'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn@1.22.11

      - name: Install
        run: |
          yarn install

      - name: Test utilities
        run: |
          cd workspaces/utils
          yarn test-ci
          cd ../..

  test-libraries:
    name: 'Libraries Test'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn@1.22.11

      - name: Install
        run: |
          yarn install

      - name: Test libraries
        run: |
          cd workspaces/templates-lib
          GOLDSTACK_DEBUG=true yarn test-ci
          cd ../..

  test-template-management:
    name: 'Templates Management Test'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn@1.22.11

      - name: Install
        run: |
          yarn install

      - name: Test template management
        run: |
          cd workspaces/templates-management
          yarn test-ci
          cd ../..

  test-apps:
    name: 'Apps Test'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn@1.22.11

      - name: Install
        run: |
          yarn install

      - name: Run tests
        run: |
          cd workspaces/apps
          yarn workspace @goldstack/goldstack-api seed-templates
          yarn test-ci
          cd ../..

  test-docs:
    name: 'Docs Test'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn@1.22.11

      - name: Install
        run: |
          yarn install

      - name: Run tests
        run: |
          cd workspaces/docs
          yarn test-ci
          cd ../..

  test-templates:
    name: 'Templates Test'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '20'

      - name: Install Yarn
        run: npm install -g yarn@1.22.11

      - name: Install
        run: |
          yarn install

      # Required for testing SSR template
      # Since Jest CSS transformer needs to be loaded from compiled JS
      - name: Compile all
        run: |
          yarn compile

      - name: Run tests
        run: |
          cd workspaces/templates
          yarn test-ci
          cd ../..

  schema:
    name: 'Generate Schemas'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn@1.22.11

      - name: Install
        run: |
          yarn install
      - name: Generate schemas
        run: |
          yarn generate-schema

  docs:
    name: 'Generate Docs'
    if: ${{ ! contains(github.event.head_commit.message, 'ci_skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn@1.22.11

      - name: Install
        run: |
          yarn install
      - name: Generate docs
        run: |
          yarn generate-docs
